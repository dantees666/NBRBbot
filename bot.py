import asyncio
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
import telebot
from aiosmtplib import SMTP
from fuzzywuzzy import fuzz
from telebot import types
import config

bot = telebot.TeleBot(config.token)

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
EMAIL_HOST = "smtp.mail.ru"      # SMTP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Mail.ru
EMAIL_PORT = 465                 # –ü–æ—Ä—Ç SMTP
EMAIL_USER = "library_email@mail.ru"  # –ü–æ—á—Ç–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
EMAIL_PASS = "your_password"         # –ü–∞—Ä–æ–ª—å –ø–æ—á—Ç—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
EMAIL_TO = "library_email@mail.ru"   # –ê–¥—Ä–µ—Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏

# –°–ª–æ–≤–∞—Ä—å –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ —Å —Å–∏–Ω–æ–Ω–∏–º–∞–º–∏
FAQ_ANSWERS = {
    "–æ –Ω–∞—Å": {
        "answer": "üìñ <b>–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë—É—Ä—è—Ç–∏—è</b> ‚Äî —Ü–µ–Ω—Ç—Ä –∑–Ω–∞–Ω–∏–π, –∫—É–ª—å—Ç—É—Ä—ã –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π.\n\n"
                  "–ê–¥—Ä–µ—Å: –£–ª–∞–Ω-–£–¥—ç, —É–ª. –õ–µ–Ω–∏–Ω–∞, 50.\n"
                  "–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: –ü–Ω-–ü—Ç —Å 9:00 –¥–æ 18:00, –°–± —Å 10:00 –¥–æ 17:00, –í—Å ‚Äî –≤—ã—Ö–æ–¥–Ω–æ–π.\n\n"
                  "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ <a href='https://nbrb.ru/'>–Ω–∞—à–µ–º —Å–∞–π—Ç–µ</a>.",
        "synonyms": ["–æ –Ω–∞—Å", "—á—Ç–æ —ç—Ç–æ –∑–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞", "—Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ"]
    },
    "—á–∞—Å—ã —Ä–∞–±–æ—Ç—ã": {
        "answer": "üìÖ <b>–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:</b>\n\n"
                  "–ü–Ω-–ü—Ç: —Å 9:00 –¥–æ 18:00\n"
                  "–°–±: —Å 10:00 –¥–æ 17:00\n"
                  "–í—Å: –≤—ã—Ö–æ–¥–Ω–æ–π.\n\n"
                  "–ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤ –ª—é–±–æ–µ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è!",
        "synonyms": ["—á–∞—Å—ã —Ä–∞–±–æ—Ç—ã", "–≤–æ —Å–∫–æ–ª—å–∫–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞", "–¥–æ —Å–∫–æ–ª—å–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∞",
                     "–≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏", "–∫–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∞"]
    },
    "–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è": {
        "answer": "üéâ <b>–ù–∞—à–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:</b>\n\n"
                  "üìÖ –õ–µ–∫—Ü–∏–∏, –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –∫–Ω–∏–≥, —Ä–µ–ø–µ—Ç–∏—Ü–∏–∏ —Ö–æ—Ä–∞ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.\n\n"
                  "üìå –°–ª–µ–¥–∏—Ç–µ –∑–∞ –∞—Ñ–∏—à–µ–π –Ω–∞ <a href='https://nbrbru.tmweb.ru/affiche/'>–Ω–∞—à–µ–º —Å–∞–π—Ç–µ</a>.",
        "synonyms": ["–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "–∫–∞–∫–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç", "—á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ"]
    },
    "—ç–∫—Å–∫—É—Ä—Å–∏—è": {
        "answer": "üö∂‚Äç‚ôÇÔ∏è <b>–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —ç–∫—Å–∫—É—Ä—Å–∏—é?</b>\n\n"
                  "–ó–∞–ø–∏—Å—å –≤–æ–∑–º–æ–∂–Ω–∞ –Ω–∞ —Å—Ç–æ–π–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –æ–Ω–ª–∞–π–Ω –ø–æ "
                  "<a href='https://iframeab-pre6061.intickets.ru/event/12331186'>—Å—Å—ã–ª–∫–µ</a>.",
        "synonyms": ["—ç–∫—Å–∫—É—Ä—Å–∏—è", "–∫–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —ç–∫—Å–∫—É—Ä—Å–∏—é", "–∑–∞–ø–∏—Å—å –Ω–∞ —ç–∫—Å–∫—É—Ä—Å–∏—é"]
    },
    "—á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã": {
        "answer": "üìö <b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</b>\n\n"
                  "1. <b>–ö—Ç–æ –º–æ–∂–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?</b> \n"
                  "–ì—Ä–∞–∂–¥–∞–Ω–µ –†–§ –∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω—Ü—ã —Å—Ç–∞—Ä—à–µ 14 –ª–µ—Ç —Å –ø–∞—Å–ø–æ—Ä—Ç–æ–º.\n\n"
                  "2. <b>–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?</b>\n"
                  "–õ–∏—á–Ω–æ –Ω–∞ —Å—Ç–æ–π–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ —á–µ—Ä–µ–∑ –ì–æ—Å—É—Å–ª—É–≥–∏. "
                  "<a href='https://nbrbru.tmweb.ru/info/kak-zapisatsa/'>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>\n\n"
                  "3. <b>–ß—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å —Å —á–∏—Ç–∞—Ç–µ–ª—å—Å–∫–∏–º –±–∏–ª–µ—Ç–æ–º?</b>\n"
                  "–ë—Ä–∞—Ç—å –∫–Ω–∏–≥–∏, –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–µ—Å—É—Ä—Å–∞–º–∏, —Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞ –ü–ö.\n\n"
                  "4. <b>–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å –∫–Ω–∏–≥–∏?</b>\n"
                  "–í —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º –∫–∞—Ç–∞–ª–æ–≥–µ (—Ç—Ä–µ–±—É–µ—Ç—Å—è —á–∏—Ç–∞—Ç–µ–ª—å—Å–∫–∏–π –±–∏–ª–µ—Ç). "
                  "<a href='http://nbrbru.tmweb.ru/info/kak-zakazat-knigu/'>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>\n\n"
                  "5. <b>–ö–∞–∫ –ø—Ä–æ–¥–ª–∏—Ç—å –∫–Ω–∏–≥–∏?</b>\n"
                  "–î–æ 5 –∫–Ω–∏–≥ –Ω–∞ 15 –¥–Ω–µ–π, –º–æ–∂–Ω–æ –ø—Ä–æ–¥–ª–∏—Ç—å 2 —Ä–∞–∑–∞. "
                  "<a href='http://nbrbru.tmweb.ru/info/kak-prodlit-knigu'>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>\n\n"
                  "6. <b>–ß—Ç–æ –º–æ–∂–Ω–æ –±–µ–∑ –±–∏–ª–µ—Ç–∞?</b>\n"
                  "–ü–æ—Å–µ—Ç–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, —ç–∫—Å–∫—É—Ä—Å–∏–∏, –∫—É–ø–∏—Ç—å –∫–Ω–∏–≥–∏.\n\n"
                  "7. <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏:</b>\n"
                  "–ö—Å–µ—Ä–æ–∫–æ–ø–∏—è, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏, —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã –∫–Ω–∏–≥.",
        "synonyms": ["—á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", "–≤–æ–ø—Ä–æ—Å", "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"]
    }
}
# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Ö–æ–∂–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
def get_closest_match(user_input):
    best_match, highest_score = None, 0
    for key, data in FAQ_ANSWERS.items():
        for synonym in data["synonyms"]:
            similarity = fuzz.partial_ratio(user_input.lower(), synonym.lower())
            if similarity > highest_score:
                best_match, highest_score = key, similarity
    return best_match if highest_score > 60 else None  # –ü–æ—Ä–æ–≥ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ email
async def send_email_async(name, phone, email, city, message):
    try:
        msg = MIMEMultipart()
        msg["From"] = EMAIL_USER
        msg["To"] = EMAIL_TO
        msg["Subject"] = "–í–æ–ø—Ä–æ—Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—é"
        body = f"<b>–ò–º—è:</b> {name}<br><b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}<br><b>Email:</b> {email}<br>" \
               f"<b>–ì–æ—Ä–æ–¥:</b> {city}<br><b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> {message}"
        msg.attach(MIMEText(body, "html", "utf-8"))
        smtp_client = SMTP(hostname=EMAIL_HOST, port=EMAIL_PORT, use_tls=True)
        async with smtp_client:
            await smtp_client.login(EMAIL_USER, EMAIL_PASS)
            await smtp_client.send_message(msg)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=['start'])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–û –Ω–∞—Å", "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —ç–∫—Å–∫—É—Ä—Å–∏—é?")
    markup.add("–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—é")
    bot.send_message(
        message.chat.id,
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}! –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é üëá",
        reply_markup=markup,
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler(content_types=['text'])
def handle_text(message):
    user_id = message.chat.id
    if user_id in user_data and "step" in user_data[user_id]:
        process_dialog(message)
        return

    if message.text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—é":
        user_data[user_id] = {"step": "name"}
        bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    else:
        user_input = message.text.strip()
        match = get_closest_match(user_input)
        if match:
            bot.send_message(user_id, FAQ_ANSWERS[match]["answer"], parse_mode='html')
        else:
            bot.send_message(user_id, "ü§î –Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –≤–æ–ø—Ä–æ—Å.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —ç—Ç–∞–ø–æ–≤ –¥–∏–∞–ª–æ–≥–∞
def process_dialog(message):
    user_id = message.chat.id
    step = user_data[user_id]["step"]

    if step == "name":
        user_data[user_id]["name"] = message.text
        user_data[user_id]["step"] = "phone"
        bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω:")
    elif step == "phone":
        user_data[user_id]["phone"] = message.text
        user_data[user_id]["step"] = "email"
        bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à E-mail:")
    elif step == "email":
        user_data[user_id]["email"] = message.text
        user_data[user_id]["step"] = "city"
        bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ (–ø–æ –∂–µ–ª–∞–Ω–∏—é):")
    elif step == "city":
        user_data[user_id]["city"] = message.text
        user_data[user_id]["step"] = "message"
        bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
    elif step == "message":
        user_data[user_id]["message"] = message.text
        data = user_data.pop(user_id)  # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        asyncio.create_task(
            send_email_async(data["name"], data["phone"], data["email"], data["city"], data["message"])
        )
        bot.send_message(user_id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    bot.infinity_polling()